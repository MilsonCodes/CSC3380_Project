{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\bsimp\\\\Documents\\\\GitHub\\\\CSC3380_Project\\\\src\\\\components\\\\Modal\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Button\";\nimport { FiX } from \"react-icons/fi\";\nimport { darken } from \"polished\";\nconst ModalDiv = styled.div`\n  position: fixed;\n  transition: all 2s ease-in-out;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 990;\n  display: ${props => props.open ? \"block\" : \"none\"};\n  :close_modal {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n    cursor: pointer;\n    font-size: 18px;\n    opacity: 0.5;\n    background: none;\n    border: none;\n    transition: opacity 0.2s ease;\n  }\n  :close_modal:hover {\n    opacity: 0.9;\n  }\n`;\nconst Overlay = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 995;\n  background: rgba(0, 0, 0, 0.85);\n`;\nconst Content = styled.div`\n  z-index: 999;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-height: 90%;\n  overflow: auto;\n  background: #fff;\n  box-sizing: border-box;\n  padding: 20px;\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.7);\n  border-radius: 4px;\n  width: 50%;\n  overflow: hidden;\n  display: block;\n  span {\n    float: right;\n  }\n`;\nconst Text = styled.div`\n  overflow: hidden;\n  text-decoration: underline;\n  color: ${p => p.color ? darken(0.1, p.color) : darken(0.2, p.theme.secondary)};\n  :hover {\n    color: ${p => p.color ? p.color != \"black\" ? darken(0.3, p.color) : darken(-0.3, p.color) : darken(0.35, p.theme.secondary)};\n    cursor: pointer;\n  }\n`;\n\nconst Modal = props => {\n  const [isOpen, setOpen] = React.useState(false);\n\n  if (process.browser) {\n    document.addEventListener(\"keyup\", function (e) {\n      // closes on escape key\n      if (e.keyCode == 27) {\n        setOpen(false);\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Text, _extends({}, props, {\n    onClick: () => setOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), props.children), __jsx(ModalDiv, {\n    on: true,\n    open: isOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Overlay, {\n    onClick: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    onClick: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(FiX, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), props.element)));\n};\n\nexport default Modal;","map":{"version":3,"sources":["C:\\Users\\bsimp\\Documents\\GitHub\\CSC3380_Project\\src\\components\\Modal\\index.js"],"names":["React","styled","Button","FiX","darken","ModalDiv","div","props","open","Overlay","Content","Text","p","color","theme","secondary","Modal","isOpen","setOpen","useState","process","browser","document","addEventListener","e","keyCode","children","element"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;aAQfC,KAAK,IAAKA,KAAK,CAACC,IAAN,GAAa,OAAb,GAAuB,MAAQ;;;;;;;;;;;;;;;CARtD;AAyBA,MAAMC,OAAO,GAAGR,MAAM,CAACK,GAAI;;;;;;;;CAA3B;AASA,MAAMI,OAAO,GAAGT,MAAM,CAACK,GAAI;;;;;;;;;;;;;;;;;;;CAA3B;AAqBA,MAAMK,IAAI,GAAGV,MAAM,CAACK,GAAI;;;WAGbM,CAAC,IACRA,CAAC,CAACC,KAAF,GAAUT,MAAM,CAAC,GAAD,EAAMQ,CAAC,CAACC,KAAR,CAAhB,GAAiCT,MAAM,CAAC,GAAD,EAAMQ,CAAC,CAACE,KAAF,CAAQC,SAAd,CAAyB;;aAEvDH,CAAC,IACRA,CAAC,CAACC,KAAF,GACID,CAAC,CAACC,KAAF,IAAW,OAAX,GACET,MAAM,CAAC,GAAD,EAAMQ,CAAC,CAACC,KAAR,CADR,GAEET,MAAM,CAAC,CAAC,GAAF,EAAOQ,CAAC,CAACC,KAAT,CAHZ,GAIIT,MAAM,CAAC,IAAD,EAAOQ,CAAC,CAACE,KAAF,CAAQC,SAAf,CAA0B;;;CAX1C;;AAgBA,MAAMC,KAAK,GAAGT,KAAK,IAAI;AACrB,QAAM,CAACU,MAAD,EAASC,OAAT,IAAoBlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAA1B;;AACA,MAAIC,OAAO,CAACC,OAAZ,EAAqB;AACnBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,UAASC,CAAT,EAAY;AAC7C;AACA,UAAIA,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAqB;AACnBP,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KALD;AAMD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,eAAUX,KAAV;AAAiB,IAAA,OAAO,EAAE,MAAMW,OAAO,CAAC,IAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGX,KAAK,CAACmB,QADT,CADF,EAIE,MAAC,QAAD;AAAU,IAAA,EAAE,MAAZ;AAAa,IAAA,IAAI,EAAET,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAMGX,KAAK,CAACoB,OANT,CAFF,CAJF,CADF;AAkBD,CA5BD;;AA6BA,eAAeX,KAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../Button\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { darken } from \"polished\";\r\n\r\nconst ModalDiv = styled.div`\r\n  position: fixed;\r\n  transition: all 2s ease-in-out;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 990;\r\n  display: ${props => (props.open ? \"block\" : \"none\")};\r\n  :close_modal {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 10px;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    opacity: 0.5;\r\n    background: none;\r\n    border: none;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n  :close_modal:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 995;\r\n  background: rgba(0, 0, 0, 0.85);\r\n`;\r\nconst Content = styled.div`\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  max-height: 90%;\r\n  overflow: auto;\r\n  background: #fff;\r\n  box-sizing: border-box;\r\n  padding: 20px;\r\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.7);\r\n  border-radius: 4px;\r\n  width: 50%;\r\n  overflow: hidden;\r\n  display: block;\r\n  span {\r\n    float: right;\r\n  }\r\n`;\r\n\r\nconst Text = styled.div`\r\n  overflow: hidden;\r\n  text-decoration: underline;\r\n  color: ${p =>\r\n    p.color ? darken(0.1, p.color) : darken(0.2, p.theme.secondary)};\r\n  :hover {\r\n    color: ${p =>\r\n      p.color\r\n        ? p.color != \"black\"\r\n          ? darken(0.3, p.color)\r\n          : darken(-0.3, p.color)\r\n        : darken(0.35, p.theme.secondary)};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Modal = props => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  if (process.browser) {\r\n    document.addEventListener(\"keyup\", function(e) {\r\n      // closes on escape key\r\n      if (e.keyCode == 27) {\r\n        setOpen(false);\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <Text {...props} onClick={() => setOpen(true)}>\r\n        {props.children}\r\n      </Text>\r\n      <ModalDiv on open={isOpen}>\r\n        <Overlay onClick={() => setOpen(false)} />\r\n        <Content>\r\n          <span>\r\n            <Button size='small' onClick={() => setOpen(false)}>\r\n              <FiX />\r\n            </Button>\r\n          </span>\r\n          {props.element}\r\n        </Content>\r\n      </ModalDiv>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}